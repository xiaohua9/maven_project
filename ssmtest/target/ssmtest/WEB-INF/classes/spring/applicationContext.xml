<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

        <!--将Service交由spring管理-->
        <context:component-scan base-package="com.learn.service.impl"/>
        <!--配置c3p0连接池-->
        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
                <property name="driverClass" value="com.mysql.jdbc.Driver"/>
                <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/bookdb?useUnicode=true&amp;characterEncoding=UTF-8"/>
                <property name="user" value="root"/>
                <property name="password" value="root"/>

        </bean>
        <!-- spring容器来管理mybatis的sqlSessionFactory对象 -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
                <property name="dataSource"  ref="dataSource"/>
                <property name="configLocation"  value="classpath:mybatis/mybatis-config.xml"/>
                <property name="typeAliasesPackage" value="com.learn.entity"/>
                <property name="mapperLocations" value="classpath:com/learn/mapper/*Mapper.xml"/>
        </bean>

        <!--为每一个接口根据映射文件生成数据访问对象的 实现类-->
        <bean id="mapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                <!--指定数据访问对象的接口所对应的包 -->
                <property name="basePackage" value="com.learn.mapper"/>
                <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        </bean>
        <!--配置事务管理器  -->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
           <property name="dataSource" ref="dataSource"/>
        </bean>

        <tx:annotation-driven/>
        <!--事务的传播特性 跟业务层中的类的方法命名有关系-->
        <tx:advice id="tx" transaction-manager="transactionManager">
                <tx:attributes>
                        <tx:method name="insert*" propagation="REQUIRED"/>
                        <tx:method name="update*" propagation="REQUIRED"/>
                        <tx:method name="delete*" propagation="REQUIRED"/>
                        <!-- 其它的方法只能查询不能改 -->
                        <tx:method name="*" read-only="true"/>
                </tx:attributes>
        </tx:advice>
        <!-- 事务的传播特性 用于那些包，那些中的那些类使用这个事务 -->
        <!--com.kgc.service.impl下类中的方法名,如果方法名为insert开头 自动给这个开启一个事务,当这个方法结束，再提交这个事务 -->
        <!-- 如果这个业务层的方法，调用多个Dao层的方法,那这多个方法属于同一个事务-->
        <aop:config>
                <!-- 需要做功能增强的类 -->
                <aop:pointcut id="pointcut" expression="execution(* com.learn.service.impl.*.*(..))"></aop:pointcut>
                <aop:advisor advice-ref="tx" pointcut-ref="pointcut"/>
        </aop:config>
        </beans>